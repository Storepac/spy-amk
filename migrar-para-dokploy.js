// Script para migrar extens√£o do SupabaseManager para DokployManager
console.log('üîÑ MIGRA√á√ÉO PARA DOKPLOY INICIADA\n');

// Configura√ß√£o do DokployManager
const DOKPLOY_CONFIG = {
    enabled: true,
    baseUrl: 'http://localhost:3000', // URL do backend local
    timeout: 10000,
    retries: 3
};

// Fun√ß√£o para substituir SupabaseManager por DokployManager no app.js
function migrarApp() {
    console.log('üìù Migrando app.js...');
    
    // Aqui voc√™ pode adicionar l√≥gica para substituir automaticamente
    // Por enquanto, vamos mostrar as mudan√ßas necess√°rias
    
    console.log('üîß MUDAN√áAS NECESS√ÅRIAS NO app.js:');
    console.log('');
    console.log('1. Substituir verifica√ß√£o do SupabaseManager:');
    console.log('   ANTES: if (typeof window.supabaseManager === "undefined")');
    console.log('   DEPOIS: if (typeof window.dokployManager === "undefined")');
    console.log('');
    console.log('2. Substituir chamadas de m√©todos:');
    console.log('   ANTES: window.supabaseManager.analisarPosicoes()');
    console.log('   DEPOIS: window.dokployManager.analisarPosicoes()');
    console.log('');
    console.log('3. Substituir processamento de lotes:');
    console.log('   ANTES: window.supabaseManager.processarListaProdutos()');
    console.log('   DEPOIS: window.dokployManager.processarListaProdutos()');
    console.log('');
}

// Fun√ß√£o para verificar se o DokployManager est√° funcionando
function verificarDokployManager() {
    console.log('üîç Verificando DokployManager...');
    
    if (typeof window !== 'undefined' && window.dokployManager) {
        console.log('‚úÖ DokployManager est√° dispon√≠vel no browser');
        
        // Testar m√©todos principais
        if (typeof window.dokployManager.testConnection === 'function') {
            console.log('‚úÖ M√©todo testConnection dispon√≠vel');
        }
        
        if (typeof window.dokployManager.salvarProduto === 'function') {
            console.log('‚úÖ M√©todo salvarProduto dispon√≠vel');
        }
        
        if (typeof window.dokployManager.salvarPosicao === 'function') {
            console.log('‚úÖ M√©todo salvarPosicao dispon√≠vel');
        }
        
        return true;
    } else {
        console.log('‚ùå DokployManager n√£o est√° dispon√≠vel');
        console.log('üí° Certifique-se de que o arquivo est√° carregado no manifest.json');
        return false;
    }
}

// Fun√ß√£o para testar salvamento
async function testarSalvamento() {
    console.log('üíæ Testando salvamento no Dokploy...');
    
    if (typeof window === 'undefined' || !window.dokployManager) {
        console.log('‚ùå DokployManager n√£o dispon√≠vel para teste');
        return;
    }
    
    try {
        // Testar conex√£o
        console.log('üîå Testando conex√£o...');
        await window.dokployManager.testConnection();
        console.log('‚úÖ Conex√£o funcionando');
        
        // Testar salvamento de produto
        console.log('üíæ Testando salvamento de produto...');
        const produtoTeste = {
            asin: 'TEST-MIGRA√á√ÉO-' + Date.now(),
            titulo: 'Produto de Teste - Migra√ß√£o Dokploy',
            preco: 199.99,
            vendas: 2500,
            ranking: 1,
            categoria: 'Teste',
            marca: 'TesteMarca',
            vendedor: 'TesteVendedor',
            url: 'https://teste-migracao.com',
            imagem: 'https://teste-migracao.com/imagem.jpg',
            vendas_texto_original: '2.5K+ bought',
            vendas_seletor_usado: 'teste-migracao',
            vendas_metodo_extracao: 'restritivo',
            vendas_confiabilidade: 98
        };
        
        const resultadoProduto = await window.dokployManager.salvarProduto(produtoTeste);
        console.log('‚úÖ Produto salvo:', resultadoProduto);
        
        // Testar salvamento de posi√ß√£o
        console.log('üìç Testando salvamento de posi√ß√£o...');
        const posicaoTeste = {
            asin: produtoTeste.asin,
            posicao: 1,
            pagina: 1,
            keyword: 'teste migra√ß√£o dokploy',
            preco_atual: 199.99,
            vendas_atual: 2500
        };
        
        const resultadoPosicao = await window.dokployManager.salvarPosicao(posicaoTeste);
        console.log('‚úÖ Posi√ß√£o salva:', resultadoPosicao);
        
        console.log('üéâ Todos os testes de salvamento passaram!');
        
    } catch (error) {
        console.error('‚ùå Erro no teste de salvamento:', error.message);
        console.error('üí° Verifique se o backend est√° rodando: cd aws-backend && npm start');
    }
}

// Fun√ß√£o principal de migra√ß√£o
async function executarMigracao() {
    console.log('üöÄ INICIANDO MIGRA√á√ÉO PARA DOKPLOY...\n');
    
    // Passo 1: Mostrar mudan√ßas necess√°rias
    migrarApp();
    
    // Passo 2: Verificar se DokployManager est√° dispon√≠vel
    console.log('\n' + '='.repeat(50));
    const dokployDisponivel = verificarDokployManager();
    
    // Passo 3: Testar salvamento (se dispon√≠vel)
    if (dokployDisponivel) {
        console.log('\n' + '='.repeat(50));
        await testarSalvamento();
    }
    
    // Passo 4: Instru√ß√µes finais
    console.log('\n' + '='.repeat(50));
    console.log('üìã PR√ìXIMOS PASSOS:');
    console.log('');
    console.log('1. ‚úÖ DokployManager j√° est√° no manifest.json');
    console.log('2. üîÑ Migrar app.js (substituir supabaseManager por dokployManager)');
    console.log('3. üöÄ Iniciar backend: cd aws-backend && npm start');
    console.log('4. üß™ Testar extens√£o em p√°gina da Amazon');
    console.log('5. üìä Verificar dados salvos no banco Dokploy');
    console.log('');
    console.log('üí° DICA: Use o script teste-conexao-dokploy.cjs para verificar o banco');
    console.log('');
}

// Executar migra√ß√£o
if (typeof window !== 'undefined') {
    // Executar no browser
    executarMigracao();
} else {
    // Executar no Node.js
    console.log('üìù Script de migra√ß√£o criado com sucesso!');
    console.log('üí° Execute este script no console do browser para testar a migra√ß√£o');
}

// Exportar para uso no browser
if (typeof window !== 'undefined') {
    window.migrarParaDokploy = executarMigracao;
} 